{
	"info": {
		"_postman_id": "315bf366-e90c-497f-975e-a157e27b3913",
		"name": "Flask Course",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Section 3",
			"item": [
				{
					"name": "/store",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5005/store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Amazon Pro\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5005/store/Amazon Pro",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"store",
								"Amazon Pro"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>/item",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5005/store/Amazon Pro/item",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"store",
								"Amazon Pro",
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>/item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Another Item\",\n    \"price\": 45.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/store/Amazon Pro/item",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"store",
								"Amazon Pro",
								"item"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 4",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5005/items",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items each in json format"
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MjE2NDQ0MDYsImlhdCI6MTYyMTY0NDEwNiwibmJmIjoxNjIxNjQ0MTA2LCJpZGVudGl0eSI6MX0.z4sS2svYb3Jy0mWL-WwD7DJaq0r5jOdcpUeqihbFQgQ",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:5005/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 12.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should create a new item.\nIf the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 22.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should create a new item if it doesn't exist.\nIf the item already exists, it will update the item with the new price."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5005/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should delete an item uniqely identified by name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bob\",\n    \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 5",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5005/items",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items each in json format"
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MjE3MTUyNjQsImlhdCI6MTYyMTcxNDk2NCwibmJmIjoxNjIxNzE0OTY0LCJpZGVudGl0eSI6MX0.NrB9mVYApAFXul5kQvuLjOhwDOA8fGN0zF_rjKThdvY",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:5005/item/chair",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"item",
								"chair"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 12.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/item/chair",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"item",
								"chair"
							]
						},
						"description": "This should create a new item.\nIf the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 22.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should create a new item if it doesn't exist.\nIf the item already exists, it will update the item with the new price."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5005/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should delete an item uniqely identified by name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bob\",\n    \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bob\",\n    \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5005/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5005",
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 6",
			"item": [
				{
					"name": "/stores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/test",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"test"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/test2",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"test2"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/test2",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"test2"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items each in json format"
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 12.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/desk",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"desk"
							]
						},
						"description": "This should create a new item.\nIf the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 22.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should create a new item if it doesn't exist.\nIf the item already exists, it will update the item with the new price."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should delete an item uniqely identified by name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"access_token not empty\"] = jsonData.access_token !== undefined",
									"",
									"postman.setEnvironmentVariable(\"jwt_token\", jsonData.access_token)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bob\",\n    \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bob\",\n    \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 11",
			"item": [
				{
					"name": "/stores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/test",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"test"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/test2",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"test2"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/test2",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"test2"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items each in json format"
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/item/desk",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"desk"
							]
						},
						"description": "This should return a single specific item by name.\nNo two items should have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 12.99,\n    \"store_id\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/desk",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"desk"
							]
						},
						"description": "This should create a new item.\nIf the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 22.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This should create a new item if it doesn't exist.\nIf the item already exists, it will update the item with the new price."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/item/desk",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"desk"
							]
						},
						"description": "This should delete an item uniqely identified by name."
					},
					"response": []
				},
				{
					"name": "/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"access_token not empty\"] = jsonData.access_token !== undefined",
									"",
									"postman.setEnvironmentVariable(\"jwt_token\", jsonData.access_token)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bob\",\n    \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bob\",\n    \"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/<user_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/<user_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}